/* This file was automatically generated by CasADi.
   The CasADi copyright holders make no ownership claim of its contents. */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) eval_jac_g_spot_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_sq CASADI_PREFIX(sq)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

casadi_real casadi_sq(casadi_real x) { return x*x;}

static const casadi_int casadi_s0[40] = {36, 1, 0, 36, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35};
static const casadi_int casadi_s1[18] = {14, 1, 0, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13};
static const casadi_int casadi_s2[171] = {28, 36, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 18, 24, 30, 37, 43, 49, 56, 62, 68, 75, 81, 87, 94, 95, 96, 97, 102, 107, 110, 112, 114, 116, 120, 126, 132, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 9, 10, 11, 9, 10, 11, 6, 9, 10, 11, 12, 13, 7, 9, 10, 11, 14, 15, 8, 9, 10, 12, 13, 14, 15, 6, 9, 10, 11, 16, 17, 7, 9, 10, 11, 18, 19, 8, 9, 10, 16, 17, 18, 19, 6, 9, 10, 11, 20, 21, 7, 9, 10, 11, 22, 23, 8, 9, 10, 20, 21, 22, 23, 6, 9, 10, 11, 24, 25, 7, 9, 10, 11, 26, 27, 8, 9, 10, 24, 25, 26, 27, 0, 1, 2, 3, 4, 5, 10, 11, 3, 4, 5, 9, 11, 5, 9, 10, 0, 6, 1, 7, 2, 8, 3, 9, 10, 11, 3, 4, 5, 9, 10, 11, 3, 4, 5, 9, 10, 11};

/* eval_jac_g_spot:(w[36],p[14])->(jac_g[28x36,132nz]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real a0, a1, a10, a100, a101, a102, a103, a104, a105, a106, a107, a108, a109, a11, a110, a111, a112, a113, a114, a115, a116, a117, a118, a119, a12, a120, a121, a13, a14, a15, a16, a17, a18, a19, a2, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a3, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a4, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a5, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a6, a60, a61, a62, a63, a64, a65, a66, a67, a68, a69, a7, a70, a71, a72, a73, a74, a75, a76, a77, a78, a79, a8, a80, a81, a82, a83, a84, a85, a86, a87, a88, a89, a9, a90, a91, a92, a93, a94, a95, a96, a97, a98, a99;
  a0=-1.;
  if (res[0]!=0) res[0][0]=a0;
  if (res[0]!=0) res[0][1]=a0;
  if (res[0]!=0) res[0][2]=a0;
  if (res[0]!=0) res[0][3]=a0;
  if (res[0]!=0) res[0][4]=a0;
  if (res[0]!=0) res[0][5]=a0;
  a1=-1.9233000000000001e+01;
  if (res[0]!=0) res[0][6]=a1;
  if (res[0]!=0) res[0][7]=a1;
  if (res[0]!=0) res[0][8]=a1;
  a1=-8.9986387000000001e-02;
  if (res[0]!=0) res[0][9]=a1;
  a2=3.0338000000000001e-04;
  a3=arg[0]? arg[0][27] : 0;
  a4=cos(a3);
  a5=(a2*a4);
  a6=1.9182180000000000e-03;
  a7=sin(a3);
  a8=(a6*a7);
  a5=(a5-a8);
  a8=(-a5);
  if (res[0]!=0) res[0][10]=a8;
  a8=arg[0]? arg[0][28] : 0;
  a9=sin(a8);
  a10=(a1*a9);
  a11=cos(a8);
  a12=(a4*a11);
  a12=(a6*a12);
  a10=(a10+a12);
  a12=(a11*a7);
  a12=(a2*a12);
  a10=(a10+a12);
  a12=(-a10);
  if (res[0]!=0) res[0][11]=a12;
  a12=-3.0338000000000001e-04;
  if (res[0]!=0) res[0][12]=a12;
  a13=4.6598001675000000e-01;
  a14=(a13*a4);
  a15=7.5401999999999994e-05;
  a16=(a15*a7);
  a14=(a14+a16);
  a16=(-a14);
  if (res[0]!=0) res[0][13]=a16;
  a16=(a12*a9);
  a17=(a4*a11);
  a17=(a15*a17);
  a16=(a16-a17);
  a17=(a11*a7);
  a17=(a13*a17);
  a16=(a16+a17);
  a17=(-a16);
  if (res[0]!=0) res[0][14]=a17;
  a17=-1.9182180000000000e-03;
  if (res[0]!=0) res[0][15]=a17;
  a18=-7.5401999999999994e-05;
  a19=(a18*a4);
  a20=4.8640238174999989e-01;
  a21=(a20*a7);
  a19=(a19-a21);
  a21=(-a19);
  if (res[0]!=0) res[0][16]=a21;
  a21=(a17*a9);
  a22=(a4*a11);
  a22=(a20*a22);
  a21=(a21+a22);
  a22=(a11*a7);
  a22=(a15*a22);
  a21=(a21-a22);
  a22=(-a21);
  if (res[0]!=0) res[0][17]=a22;
  a22=arg[1]? arg[1][0] : 0;
  a23=(-a22);
  if (res[0]!=0) res[0][18]=a23;
  a24=arg[1]? arg[1][3] : 0;
  a25=(a24*a9);
  a26=arg[1]? arg[1][4] : 0;
  a27=(a26*a11);
  a28=arg[0]? arg[0][29] : 0;
  a29=sin(a28);
  a30=(a27*a29);
  a25=(a25+a30);
  a25=(a25*a22);
  if (res[0]!=0) res[0][19]=a25;
  a25=cos(a28);
  a30=(a26*a25);
  a30=(a30*a22);
  if (res[0]!=0) res[0][20]=a30;
  a30=(a24*a22);
  a30=(-a30);
  if (res[0]!=0) res[0][21]=a30;
  a30=1.;
  if (res[0]!=0) res[0][22]=a30;
  if (res[0]!=0) res[0][23]=a0;
  a31=(-a22);
  if (res[0]!=0) res[0][24]=a31;
  a32=arg[1]? arg[1][2] : 0;
  a33=(a32*a9);
  a34=(a26*a11);
  a35=(a34*a25);
  a33=(a33+a35);
  a33=(a33*a22);
  a33=(-a33);
  if (res[0]!=0) res[0][25]=a33;
  a33=(a26*a29);
  a33=(a33*a22);
  if (res[0]!=0) res[0][26]=a33;
  a33=(a32*a22);
  if (res[0]!=0) res[0][27]=a33;
  if (res[0]!=0) res[0][28]=a30;
  if (res[0]!=0) res[0][29]=a0;
  a33=(-a22);
  if (res[0]!=0) res[0][30]=a33;
  a35=(a24*a25);
  a36=(a32*a29);
  a35=(a35-a36);
  a36=(a11*a35);
  a36=(a36*a22);
  if (res[0]!=0) res[0][31]=a36;
  a36=(a32*a25);
  a37=(a24*a29);
  a36=(a36+a37);
  a36=(a36*a22);
  a36=(-a36);
  if (res[0]!=0) res[0][32]=a36;
  a36=arg[1]? arg[1][1] : 0;
  a37=(-a36);
  if (res[0]!=0) res[0][33]=a37;
  a37=(-a36);
  if (res[0]!=0) res[0][34]=a37;
  a37=(-a36);
  if (res[0]!=0) res[0][35]=a37;
  a37=(-a36);
  if (res[0]!=0) res[0][36]=a37;
  if (res[0]!=0) res[0][37]=a23;
  a37=arg[1]? arg[1][6] : 0;
  a38=(a37*a9);
  a39=arg[1]? arg[1][7] : 0;
  a40=(a39*a11);
  a41=(a40*a29);
  a38=(a38+a41);
  a38=(a38*a22);
  if (res[0]!=0) res[0][38]=a38;
  a38=(a39*a25);
  a38=(a38*a22);
  if (res[0]!=0) res[0][39]=a38;
  a38=(a37*a22);
  a38=(-a38);
  if (res[0]!=0) res[0][40]=a38;
  if (res[0]!=0) res[0][41]=a30;
  if (res[0]!=0) res[0][42]=a0;
  if (res[0]!=0) res[0][43]=a31;
  a38=arg[1]? arg[1][5] : 0;
  a41=(a38*a9);
  a42=(a39*a11);
  a43=(a42*a25);
  a41=(a41+a43);
  a41=(a41*a22);
  a41=(-a41);
  if (res[0]!=0) res[0][44]=a41;
  a41=(a39*a29);
  a41=(a41*a22);
  if (res[0]!=0) res[0][45]=a41;
  a41=(a38*a22);
  if (res[0]!=0) res[0][46]=a41;
  if (res[0]!=0) res[0][47]=a30;
  if (res[0]!=0) res[0][48]=a0;
  if (res[0]!=0) res[0][49]=a33;
  a41=(a37*a25);
  a43=(a38*a29);
  a41=(a41-a43);
  a43=(a11*a41);
  a43=(a43*a22);
  if (res[0]!=0) res[0][50]=a43;
  a43=(a38*a25);
  a44=(a37*a29);
  a43=(a43+a44);
  a43=(a43*a22);
  a43=(-a43);
  if (res[0]!=0) res[0][51]=a43;
  a43=(-a36);
  if (res[0]!=0) res[0][52]=a43;
  a43=(-a36);
  if (res[0]!=0) res[0][53]=a43;
  a43=(-a36);
  if (res[0]!=0) res[0][54]=a43;
  a43=(-a36);
  if (res[0]!=0) res[0][55]=a43;
  if (res[0]!=0) res[0][56]=a23;
  a43=arg[1]? arg[1][9] : 0;
  a44=(a43*a9);
  a45=arg[1]? arg[1][10] : 0;
  a46=(a45*a11);
  a47=(a46*a29);
  a44=(a44+a47);
  a44=(a44*a22);
  if (res[0]!=0) res[0][57]=a44;
  a44=(a45*a25);
  a44=(a44*a22);
  if (res[0]!=0) res[0][58]=a44;
  a44=(a43*a22);
  a44=(-a44);
  if (res[0]!=0) res[0][59]=a44;
  if (res[0]!=0) res[0][60]=a30;
  if (res[0]!=0) res[0][61]=a0;
  if (res[0]!=0) res[0][62]=a31;
  a44=arg[1]? arg[1][8] : 0;
  a47=(a44*a9);
  a48=(a45*a11);
  a49=(a48*a25);
  a47=(a47+a49);
  a47=(a47*a22);
  a47=(-a47);
  if (res[0]!=0) res[0][63]=a47;
  a47=(a45*a29);
  a47=(a47*a22);
  if (res[0]!=0) res[0][64]=a47;
  a47=(a44*a22);
  if (res[0]!=0) res[0][65]=a47;
  if (res[0]!=0) res[0][66]=a30;
  if (res[0]!=0) res[0][67]=a0;
  if (res[0]!=0) res[0][68]=a33;
  a47=(a43*a25);
  a49=(a44*a29);
  a47=(a47-a49);
  a49=(a11*a47);
  a49=(a49*a22);
  if (res[0]!=0) res[0][69]=a49;
  a49=(a44*a25);
  a50=(a43*a29);
  a49=(a49+a50);
  a49=(a49*a22);
  a49=(-a49);
  if (res[0]!=0) res[0][70]=a49;
  a49=(-a36);
  if (res[0]!=0) res[0][71]=a49;
  a49=(-a36);
  if (res[0]!=0) res[0][72]=a49;
  a49=(-a36);
  if (res[0]!=0) res[0][73]=a49;
  a49=(-a36);
  if (res[0]!=0) res[0][74]=a49;
  if (res[0]!=0) res[0][75]=a23;
  a23=arg[1]? arg[1][12] : 0;
  a49=(a23*a9);
  a50=arg[1]? arg[1][13] : 0;
  a51=(a50*a11);
  a52=(a51*a29);
  a49=(a49+a52);
  a49=(a49*a22);
  if (res[0]!=0) res[0][76]=a49;
  a49=(a50*a25);
  a49=(a49*a22);
  if (res[0]!=0) res[0][77]=a49;
  a49=(a23*a22);
  a49=(-a49);
  if (res[0]!=0) res[0][78]=a49;
  if (res[0]!=0) res[0][79]=a30;
  if (res[0]!=0) res[0][80]=a0;
  if (res[0]!=0) res[0][81]=a31;
  a31=arg[1]? arg[1][11] : 0;
  a49=(a31*a9);
  a52=(a50*a11);
  a53=(a52*a25);
  a49=(a49+a53);
  a49=(a49*a22);
  a49=(-a49);
  if (res[0]!=0) res[0][82]=a49;
  a49=(a50*a29);
  a49=(a49*a22);
  if (res[0]!=0) res[0][83]=a49;
  a49=(a31*a22);
  if (res[0]!=0) res[0][84]=a49;
  if (res[0]!=0) res[0][85]=a30;
  if (res[0]!=0) res[0][86]=a0;
  if (res[0]!=0) res[0][87]=a33;
  a33=(a23*a25);
  a0=(a31*a29);
  a33=(a33-a0);
  a0=(a11*a33);
  a0=(a0*a22);
  if (res[0]!=0) res[0][88]=a0;
  a0=(a31*a25);
  a49=(a23*a29);
  a0=(a0+a49);
  a0=(a0*a22);
  a0=(-a0);
  if (res[0]!=0) res[0][89]=a0;
  a0=(-a36);
  if (res[0]!=0) res[0][90]=a0;
  a0=(-a36);
  if (res[0]!=0) res[0][91]=a0;
  a0=(-a36);
  if (res[0]!=0) res[0][92]=a0;
  a36=(-a36);
  if (res[0]!=0) res[0][93]=a36;
  if (res[0]!=0) res[0][94]=a30;
  if (res[0]!=0) res[0][95]=a30;
  if (res[0]!=0) res[0][96]=a30;
  a36=sin(a3);
  a0=arg[0]? arg[0][35] : 0;
  a49=(a22/a11);
  a53=(a9*a49);
  a54=(a0*a53);
  a54=(a36*a54);
  a3=cos(a3);
  a55=arg[0]? arg[0][34] : 0;
  a56=(a9*a49);
  a57=(a55*a56);
  a57=(a3*a57);
  a54=(a54-a57);
  a54=(a54+a30);
  if (res[0]!=0) res[0][97]=a54;
  a54=(a0*a22);
  a54=(a3*a54);
  a57=(a55*a22);
  a57=(a36*a57);
  a54=(a54+a57);
  if (res[0]!=0) res[0][98]=a54;
  a54=(a22/a11);
  a57=(a0*a54);
  a57=(a36*a57);
  a58=(a55*a54);
  a58=(a3*a58);
  a57=(a57-a58);
  if (res[0]!=0) res[0][99]=a57;
  a57=(a55*a0);
  a58=(a6*a22);
  a57=(a57*a58);
  a59=arg[0]? arg[0][33] : 0;
  a60=(a59*a0);
  a61=(a15*a22);
  a60=(a60*a61);
  a57=(a57+a60);
  a60=(a59*a55);
  a62=3.7599362975000000e-01;
  a63=(a62*a22);
  a60=(a60*a63);
  a57=(a57-a60);
  a60=casadi_sq(a55);
  a64=(a2*a22);
  a65=(a60*a64);
  a57=(a57+a65);
  a65=casadi_sq(a59);
  a66=(a2*a22);
  a67=(a65*a66);
  a57=(a57-a67);
  a67=arg[0]? arg[0][11] : 0;
  a67=(a0-a67);
  a68=(a20*a67);
  a57=(a57-a68);
  a68=arg[0]? arg[0][10] : 0;
  a68=(a55-a68);
  a69=(a15*a68);
  a57=(a57+a69);
  a69=arg[0]? arg[0][9] : 0;
  a69=(a59-a69);
  a70=(a6*a69);
  a57=(a57-a70);
  a57=(a3*a57);
  a70=(a55*a0);
  a71=(a2*a22);
  a70=(a70*a71);
  a72=(a59*a0);
  a73=-3.9641599474999989e-01;
  a74=(a73*a22);
  a72=(a72*a74);
  a70=(a70+a72);
  a72=(a59*a55);
  a75=(a15*a22);
  a72=(a72*a75);
  a70=(a70+a72);
  a72=casadi_sq(a0);
  a76=(a6*a22);
  a77=(a72*a76);
  a70=(a70+a77);
  a77=(a17*a22);
  a78=(a65*a77);
  a70=(a70+a78);
  a18=(a18*a67);
  a70=(a70+a18);
  a18=(a13*a68);
  a70=(a70+a18);
  a18=(a2*a69);
  a70=(a70+a18);
  a70=(a36*a70);
  a57=(a57-a70);
  if (res[0]!=0) res[0][100]=a57;
  a57=(a55*a0);
  a70=(a57*a11);
  a18=(a2*a22);
  a70=(a70*a18);
  a78=(a59*a0);
  a79=(a78*a11);
  a73=(a73*a22);
  a79=(a79*a73);
  a70=(a70+a79);
  a79=(a59*a55);
  a80=(a79*a11);
  a81=(a15*a22);
  a80=(a80*a81);
  a70=(a70+a80);
  a80=(a6*a22);
  a82=(a72*a80);
  a83=(a11*a82);
  a70=(a70+a83);
  a83=(a6*a22);
  a84=(a65*a83);
  a85=(a11*a84);
  a70=(a70-a85);
  a85=(a15*a67);
  a86=(a11*a85);
  a70=(a70-a86);
  a86=(a13*a68);
  a87=(a11*a86);
  a70=(a70+a87);
  a87=(a2*a69);
  a88=(a11*a87);
  a70=(a70+a88);
  a3=(a3*a70);
  a70=(a59*a55);
  a62=(a62*a22);
  a88=(a11*a62);
  a89=(a70*a88);
  a90=(a55*a0);
  a91=(a6*a22);
  a92=(a11*a91);
  a93=(a90*a92);
  a94=(a59*a0);
  a95=(a15*a22);
  a96=(a11*a95);
  a97=(a94*a96);
  a93=(a93+a97);
  a89=(a89-a93);
  a93=(a2*a22);
  a97=(a60*a93);
  a98=(a11*a97);
  a89=(a89-a98);
  a98=(a2*a22);
  a65=(a65*a98);
  a99=(a11*a65);
  a89=(a89+a99);
  a99=(a20*a67);
  a100=(a11*a99);
  a89=(a89+a100);
  a100=(a15*a68);
  a101=(a11*a100);
  a89=(a89-a101);
  a101=(a6*a69);
  a102=(a11*a101);
  a89=(a89+a102);
  a36=(a36*a89);
  a3=(a3-a36);
  if (res[0]!=0) res[0][101]=a3;
  a3=cos(a8);
  a36=(a55*a7);
  a89=(a36*a49);
  a102=(a0*a4);
  a103=(a102*a49);
  a89=(a89+a103);
  a89=(a3*a89);
  a8=sin(a8);
  a103=(a59*a11);
  a102=(a102*a9);
  a103=(a103+a102);
  a36=(a36*a9);
  a103=(a103+a36);
  a103=(a103/a11);
  a103=(a103/a11);
  a103=(a103*a22);
  a49=(a59*a49);
  a103=(a103-a49);
  a103=(a8*a103);
  a89=(a89+a103);
  a89=(-a89);
  if (res[0]!=0) res[0][102]=a89;
  if (res[0]!=0) res[0][103]=a30;
  a89=(a0*a4);
  a103=(a55*a7);
  a89=(a89+a103);
  a89=(a89/a11);
  a89=(a89/a11);
  a89=(a89*a22);
  a89=(a8*a89);
  a89=(-a89);
  if (res[0]!=0) res[0][104]=a89;
  a89=arg[0]? arg[0][21] : 0;
  a103=(a89*a22);
  a49=(a23*a103);
  a36=arg[0]? arg[0][22] : 0;
  a102=(a36*a22);
  a104=(a31*a102);
  a49=(a49-a104);
  a104=arg[0]? arg[0][19] : 0;
  a105=(a104*a22);
  a106=(a44*a105);
  a49=(a49-a106);
  a106=arg[0]? arg[0][18] : 0;
  a107=(a106*a22);
  a108=(a43*a107);
  a49=(a49+a108);
  a108=arg[0]? arg[0][16] : 0;
  a109=(a108*a22);
  a110=(a38*a109);
  a49=(a49-a110);
  a110=arg[0]? arg[0][15] : 0;
  a111=(a110*a22);
  a112=(a37*a111);
  a49=(a49+a112);
  a112=arg[0]? arg[0][12] : 0;
  a113=(a112*a22);
  a114=(a24*a113);
  a49=(a49+a114);
  a114=arg[0]? arg[0][13] : 0;
  a115=(a114*a22);
  a116=(a32*a115);
  a49=(a49-a116);
  a49=(a3*a49);
  a116=arg[0]? arg[0][23] : 0;
  a117=(a116*a22);
  a33=(a33*a117);
  a118=(a25*a102);
  a118=(a50*a118);
  a33=(a33-a118);
  a118=(a29*a103);
  a118=(a50*a118);
  a33=(a33+a118);
  a118=arg[0]? arg[0][20] : 0;
  a119=(a118*a22);
  a47=(a47*a119);
  a33=(a33+a47);
  a47=(a25*a105);
  a47=(a45*a47);
  a33=(a33-a47);
  a47=(a29*a107);
  a47=(a45*a47);
  a33=(a33+a47);
  a47=arg[0]? arg[0][17] : 0;
  a120=(a47*a22);
  a41=(a41*a120);
  a33=(a33+a41);
  a41=(a25*a109);
  a41=(a39*a41);
  a33=(a33-a41);
  a41=(a29*a111);
  a41=(a39*a41);
  a33=(a33+a41);
  a41=arg[0]? arg[0][14] : 0;
  a121=(a41*a22);
  a35=(a35*a121);
  a33=(a33+a35);
  a29=(a29*a113);
  a29=(a26*a29);
  a33=(a33+a29);
  a25=(a25*a115);
  a25=(a26*a25);
  a33=(a33-a25);
  a33=(a8*a33);
  a49=(a49-a33);
  if (res[0]!=0) res[0][105]=a49;
  a49=(a59*a0);
  a33=(a2*a22);
  a49=(a49*a33);
  a25=(a55*a0);
  a29=2.0422364999999939e-02;
  a29=(a29*a22);
  a25=(a25*a29);
  a49=(a49-a25);
  a25=(a59*a55);
  a35=(a6*a22);
  a25=(a25*a35);
  a49=(a49-a25);
  a25=(a15*a22);
  a72=(a72*a25);
  a49=(a49-a72);
  a72=(a15*a22);
  a60=(a60*a72);
  a49=(a49+a60);
  a17=(a17*a67);
  a49=(a49+a17);
  a12=(a12*a68);
  a49=(a49+a12);
  a1=(a1*a69);
  a49=(a49+a1);
  a3=(a3*a49);
  a18=(a7*a18);
  a57=(a57*a18);
  a73=(a7*a73);
  a78=(a78*a73);
  a57=(a57+a78);
  a81=(a7*a81);
  a79=(a79*a81);
  a57=(a57+a79);
  a90=(a90*a4);
  a90=(a90*a91);
  a57=(a57-a90);
  a94=(a94*a4);
  a94=(a94*a95);
  a57=(a57-a94);
  a70=(a70*a4);
  a70=(a70*a62);
  a57=(a57+a70);
  a82=(a7*a82);
  a57=(a57+a82);
  a84=(a7*a84);
  a57=(a57-a84);
  a97=(a4*a97);
  a57=(a57-a97);
  a65=(a4*a65);
  a57=(a57+a65);
  a85=(a7*a85);
  a57=(a57-a85);
  a99=(a4*a99);
  a57=(a57+a99);
  a86=(a7*a86);
  a57=(a57+a86);
  a100=(a4*a100);
  a57=(a57-a100);
  a87=(a7*a87);
  a57=(a57+a87);
  a101=(a4*a101);
  a57=(a57+a101);
  a8=(a8*a57);
  a3=(a3-a8);
  if (res[0]!=0) res[0][106]=a3;
  if (res[0]!=0) res[0][107]=a30;
  a30=cos(a28);
  a51=(a51*a103);
  a117=(a11*a117);
  a103=(a31*a117);
  a51=(a51-a103);
  a119=(a11*a119);
  a103=(a44*a119);
  a51=(a51-a103);
  a46=(a46*a107);
  a51=(a51+a46);
  a120=(a11*a120);
  a46=(a38*a120);
  a51=(a51-a46);
  a40=(a40*a111);
  a51=(a51+a40);
  a121=(a11*a121);
  a40=(a32*a121);
  a51=(a51-a40);
  a27=(a27*a113);
  a51=(a51+a27);
  a51=(a30*a51);
  a28=sin(a28);
  a117=(a23*a117);
  a52=(a52*a102);
  a117=(a117-a52);
  a119=(a43*a119);
  a117=(a117+a119);
  a48=(a48*a105);
  a117=(a117-a48);
  a120=(a37*a120);
  a117=(a117+a120);
  a42=(a42*a109);
  a117=(a117-a42);
  a121=(a24*a121);
  a117=(a117+a121);
  a34=(a34*a115);
  a117=(a117-a34);
  a117=(a28*a117);
  a51=(a51-a117);
  if (res[0]!=0) res[0][108]=a51;
  a36=(a36*a22);
  a36=(a50*a36);
  a116=(a116*a22);
  a23=(a23*a116);
  a36=(a36-a23);
  a118=(a118*a22);
  a43=(a43*a118);
  a36=(a36-a43);
  a104=(a104*a22);
  a104=(a45*a104);
  a36=(a36+a104);
  a47=(a47*a22);
  a37=(a37*a47);
  a36=(a36-a37);
  a108=(a108*a22);
  a108=(a39*a108);
  a36=(a36+a108);
  a114=(a114*a22);
  a114=(a26*a114);
  a36=(a36+a114);
  a41=(a41*a22);
  a24=(a24*a41);
  a36=(a36-a24);
  a30=(a30*a36);
  a89=(a89*a22);
  a50=(a50*a89);
  a31=(a31*a116);
  a50=(a50-a31);
  a44=(a44*a118);
  a50=(a50-a44);
  a106=(a106*a22);
  a45=(a45*a106);
  a50=(a50+a45);
  a38=(a38*a47);
  a50=(a50-a38);
  a110=(a110*a22);
  a39=(a39*a110);
  a50=(a50+a39);
  a112=(a112*a22);
  a26=(a26*a112);
  a50=(a50+a26);
  a32=(a32*a41);
  a50=(a50-a32);
  a28=(a28*a50);
  a30=(a30-a28);
  if (res[0]!=0) res[0][109]=a30;
  a30=(-a22);
  if (res[0]!=0) res[0][110]=a30;
  a30=1.9233000000000001e+01;
  if (res[0]!=0) res[0][111]=a30;
  a28=(-a22);
  if (res[0]!=0) res[0][112]=a28;
  if (res[0]!=0) res[0][113]=a30;
  a28=(-a22);
  if (res[0]!=0) res[0][114]=a28;
  if (res[0]!=0) res[0][115]=a30;
  a30=(-a22);
  if (res[0]!=0) res[0][116]=a30;
  a30=(a55*a22);
  a28=(a6*a30);
  a50=(a0*a22);
  a32=(a2*a50);
  a28=(a28-a32);
  a32=8.9986387000000001e-02;
  a28=(a28+a32);
  if (res[0]!=0) res[0][117]=a28;
  a61=(a7*a61);
  a28=(a0*a61);
  a63=(a7*a63);
  a32=(a55*a63);
  a28=(a28-a32);
  a74=(a4*a74);
  a32=(a0*a74);
  a28=(a28+a32);
  a75=(a4*a75);
  a32=(a55*a75);
  a28=(a28+a32);
  a32=(a59+a59);
  a77=(a4*a77);
  a66=(a7*a66);
  a77=(a77-a66);
  a77=(a32*a77);
  a28=(a28+a77);
  a28=(a28+a5);
  if (res[0]!=0) res[0][118]=a28;
  a73=(a11*a73);
  a28=(a0*a73);
  a81=(a11*a81);
  a5=(a55*a81);
  a28=(a28+a5);
  a96=(a4*a96);
  a5=(a0*a96);
  a28=(a28-a5);
  a88=(a4*a88);
  a5=(a55*a88);
  a28=(a28+a5);
  a33=(a9*a33);
  a5=(a0*a33);
  a28=(a28+a5);
  a35=(a9*a35);
  a5=(a55*a35);
  a28=(a28-a5);
  a5=(a4*a11);
  a5=(a5*a98);
  a98=(a11*a7);
  a98=(a98*a83);
  a5=(a5-a98);
  a32=(a32*a5);
  a28=(a28+a32);
  a28=(a28+a10);
  if (res[0]!=0) res[0][119]=a28;
  a56=(a7*a56);
  a56=(-a56);
  if (res[0]!=0) res[0][120]=a56;
  a56=(a4*a22);
  a56=(-a56);
  if (res[0]!=0) res[0][121]=a56;
  a56=(a7*a54);
  a56=(-a56);
  if (res[0]!=0) res[0][122]=a56;
  a56=(a6*a59);
  a28=(a15*a55);
  a56=(a56-a28);
  a28=(a20*a0);
  a56=(a56+a28);
  a56=(a56*a22);
  a28=(a13*a50);
  a56=(a56-a28);
  a28=(a15*a30);
  a56=(a56-a28);
  a56=(a56+a2);
  if (res[0]!=0) res[0][123]=a56;
  a58=(a7*a58);
  a56=(a0*a58);
  a63=(a59*a63);
  a56=(a56-a63);
  a71=(a4*a71);
  a63=(a0*a71);
  a56=(a56+a63);
  a75=(a59*a75);
  a56=(a56+a75);
  a75=(a55+a55);
  a64=(a7*a64);
  a64=(a75*a64);
  a56=(a56+a64);
  a56=(a56+a14);
  if (res[0]!=0) res[0][124]=a56;
  a18=(a11*a18);
  a56=(a0*a18);
  a81=(a59*a81);
  a56=(a56+a81);
  a92=(a4*a92);
  a81=(a0*a92);
  a56=(a56-a81);
  a88=(a59*a88);
  a56=(a56+a88);
  a29=(a9*a29);
  a88=(a0*a29);
  a56=(a56-a88);
  a35=(a59*a35);
  a56=(a56-a35);
  a72=(a9*a72);
  a35=(a4*a11);
  a35=(a35*a93);
  a72=(a72-a35);
  a75=(a75*a72);
  a56=(a56+a75);
  a56=(a56+a16);
  if (res[0]!=0) res[0][125]=a56;
  a53=(a4*a53);
  a53=(-a53);
  if (res[0]!=0) res[0][126]=a53;
  a53=(a7*a22);
  if (res[0]!=0) res[0][127]=a53;
  a54=(a4*a54);
  a54=(-a54);
  if (res[0]!=0) res[0][128]=a54;
  a50=(a15*a50);
  a2=(a2*a59);
  a13=(a13*a55);
  a2=(a2+a13);
  a15=(a15*a0);
  a2=(a2-a15);
  a2=(a2*a22);
  a50=(a50-a2);
  a20=(a20*a30);
  a50=(a50+a20);
  a50=(a50+a6);
  if (res[0]!=0) res[0][129]=a50;
  a58=(a55*a58);
  a61=(a59*a61);
  a58=(a58+a61);
  a71=(a55*a71);
  a58=(a58+a71);
  a74=(a59*a74);
  a58=(a58+a74);
  a0=(a0+a0);
  a4=(a4*a76);
  a4=(a0*a4);
  a58=(a58+a4);
  a58=(a58+a19);
  if (res[0]!=0) res[0][130]=a58;
  a18=(a55*a18);
  a73=(a59*a73);
  a18=(a18+a73);
  a92=(a55*a92);
  a18=(a18-a92);
  a96=(a59*a96);
  a18=(a18-a96);
  a55=(a55*a29);
  a18=(a18-a55);
  a59=(a59*a33);
  a18=(a18+a59);
  a11=(a11*a7);
  a11=(a11*a80);
  a9=(a9*a25);
  a11=(a11-a9);
  a0=(a0*a11);
  a18=(a18+a0);
  a18=(a18+a21);
  if (res[0]!=0) res[0][131]=a18;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_spot(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_spot_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_spot_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_spot_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_spot_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_spot_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_spot_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_spot_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_spot_n_in(void) { return 2;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_spot_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real eval_jac_g_spot_default_in(casadi_int i){
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_spot_name_in(casadi_int i){
  switch (i) {
    case 0: return "w";
    case 1: return "p";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_spot_name_out(casadi_int i){
  switch (i) {
    case 0: return "jac_g";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_spot_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_spot_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s2;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_spot_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 2;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}


