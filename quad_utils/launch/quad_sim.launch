<launch>
  <arg name="robot_type" default="spot" />
  <arg name="multiple_robots" default="false" />
  <arg name="gui" default="false" />
  <arg name="paused" default="false" />
  <arg name="controller" default="inverse_dynamics" />
  <arg name="live_plot" default="false" />
  <arg name="dash" default="false" />
  <arg name="world" default="flat" />
  <arg name="logging" default="false" />
  <arg name="reference" default="twist"/>

  <!-- Run gazebo simulation -->
  <include file="$(find quad_utils)/launch/quad_gazebo.launch">
    <arg name="robot_type" value="$(arg robot_type)"/>
    <arg name="multiple_robots" value="$(arg multiple_robots)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="controller" value="$(arg controller)"/>
    <arg name="live_plot" value="$(arg live_plot)"/>
    <arg name="dash" value="$(arg dash)"/>
    <arg name="world" value="$(arg world)"/>
    <arg name="logging" value="$(arg logging)"/>
  </include>

  <!-- Start controller -->
  <include file="$(find quad_utils)/launch/quad_plan.launch">
    <arg name="robot_type" value="$(arg robot_type)"/>
    <arg name="reference" value="$(arg reference)"/>
    <arg name="logging" value="$(arg logging)"/>
  </include>

  <!-- Joystick -->
  <node pkg="joy" type="joy_node" name="joystick">
    <param name="joy_node/dev" value="/dev/input/js0"/>
  </node>

  <!-- Joystick controller -->
  <node pkg="quad_utils" type="joystick_controller.py" name="joystick_controller"/>

  <!-- Tf to pose publisher -->
  <node pkg="gazebo_scripts" type="tf_to_pose_publisher.py" name="tf_to_pose_publisher"/>

  <!-- Run a passthrough filter to down-sample the sensor point cloud.-->
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen"/>
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/robot_1/camera/depth/points"/>
    <remap from="~output" to="/camera/depth/points_downsampled"/>
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.01
      filter_limit_max: 4.0  <!-- Limit the range of points to forward to 6 meters in viewing direction-->
      filter_limit_negative: False
      leaf_size: 0.10  <!-- Limit the density to 5 cm-->
    </rosparam>
  </node>

  <!-- Launch elevation mapping node. -->
  <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
    <rosparam command="load" file="$(find quad_utils)/config/elevation_mapping/robots/spot.yaml"/>
    <rosparam command="load" file="$(find quad_utils)/config/elevation_mapping/postprocessing/postprocessor_pipeline.yaml"/>
  </node>
 </launch>
